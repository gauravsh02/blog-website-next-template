import Head from 'next/head';
import Link from 'next/link';
import Navbar from '../../../components/navbar';
import Footer from '../../../components/footer';

export default function posts( {postData}:any ) {
    return (
        <>
            <Head>
                <title>Blog | {postData.title}</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="flex flex-col">
                <Navbar />
            </div>
            <div className="dark:bg-gray-900">
                <div className="mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-5xl xl:px-0">
                    <div className="flex flex-col justify-between">
                        <main className="mb-auto">
                            <div className="mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-5xl xl:px-0">
                                <div className="fixed right-8 bottom-8 hidden flex-col gap-3 md:hidden">
                                    <button aria-label="Scroll To Comment" type="button" className="rounded-full bg-gray-200 p-2 text-gray-500 transition-all hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-400 dark:hover:bg-gray-600">
                                        <svg className="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                            <path fillRule="evenodd" d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z" clipRule="evenodd"></path>
                                        </svg>
                                    </button>
                                    <button aria-label="Scroll To Top" type="button" className="rounded-full bg-gray-200 p-2 text-gray-500 transition-all hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-400 dark:hover:bg-gray-600">
                                        <svg className="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                            <path fillRule="evenodd" d="M3.293 9.707a1 1 0 010-1.414l6-6a1 1 0 011.414 0l6 6a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L4.707 9.707a1 1 0 01-1.414 0z" clipRule="evenodd"></path>
                                        </svg>
                                    </button>
                                </div>
                                <article>
                                    <div className="xl:divide-y xl:divide-gray-200 xl:dark:divide-gray-700">
                                        <header className="pt-6 xl:pb-6">
                                            <div className="space-y-1 text-center">
                                                <dl className="space-y-10">
                                                    <div>
                                                        <dt className="sr-only">Published on</dt>
                                                        <dd className="text-base font-medium leading-6 text-gray-500 dark:text-gray-400">
                                                            {/* <time datetime="2022-12-30T16:00:00.000Z">Friday, December 30, 2022</time> */}
                                                        </dd>
                                                    </div>
                                                </dl>
                                                <div>
                                                    <h1 className="text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-5xl md:leading-14"> {postData.title} </h1>
                                                </div>
                                            </div>
                                        </header>
                                        <div style={{"gridTemplateRows": `auto 1fr;`}} className="divide-y divide-gray-200 pb-8 dark:divide-gray-700 xl:grid xl:grid-cols-4 xl:gap-x-6 xl:divide-y-0" >
                                            <dl className="pt-6 pb-10 xl:border-b xl:border-gray-200 xl:pt-11 xl:dark:border-gray-700">
                                                <dt className="sr-only">Authors</dt>
                                                <dd>
                                                    <ul className="flex justify-center space-x-8 sm:space-x-12 xl:block xl:space-x-0 xl:space-y-8">
                                                        <li className="flex items-center space-x-2">
                                                            <img alt="avatar" src={ postData.authorData.image ? postData.authorData.image : postData.bannerImage} decoding="async" data-nimg="intrinsic" className="h-10 w-10 rounded-full" />
                                                            <dl className="whitespace-nowrap text-sm font-medium leading-5">
                                                                <dt className="sr-only">Name</dt>
                                                                <dd className="text-gray-900 dark:text-gray-100">{postData.authorData.name}</dd>
                                                                <dt className="sr-only">Twitter</dt>
                                                                <dd></dd>
                                                            </dl>
                                                        </li>
                                                    </ul>
                                                </dd>
                                            </dl>
                                            <div className="divide-y divide-gray-200 dark:divide-gray-700 xl:col-span-3 xl:row-span-2 xl:pb-0">
                                                <div className="prose max-w-none pt-10 pb-8 dark:prose-dark">
                                                    <img className="mx-auto" src={postData.bannerImage} alt=""/>
                                                    <div className="my-10" dangerouslySetInnerHTML={{ __html: postData.content }} />
                                                </div>
                                            </div>
                                            <footer>
                                                <div className="divide-gray-200 text-sm font-medium leading-5 dark:divide-gray-700 xl:col-start-1 xl:row-start-2 xl:divide-y">
                                                    <div className="py-4 xl:py-8">
                                                        <h2 className="text-xs uppercase tracking-wide text-gray-500 dark:text-gray-400">Category</h2>
                                                        <div className="flex flex-wrap">
                                                            <a className="mr-3 text-sm font-medium uppercase text-primary-500 hover:text-primary-600 dark:hover:text-primary-400" href="#">{ postData.category[0] }</a>
                                                        </div>
                                                    </div>
                                                    {/* <div className="flex justify-between py-4 xl:block xl:space-y-8 xl:py-8">
                                                        <div>
                                                            <h2 className="text-xs uppercase tracking-wide text-gray-500 dark:text-gray-400">Previous Article</h2>
                                                            <div className="text-primary-500 hover:text-primary-600 dark:hover:text-primary-400">
                                                                <a href="#">Fall check-in</a>
                                                            </div>
                                                        </div>
                                                    </div> */}
                                                </div>
                                                <div className="pt-4 xl:pt-8">
                                                    <Link className="text-primary-500 hover:text-primary-600 dark:hover:text-primary-400" href="/posts">‚Üê Back to the blog</Link>
                                                </div>
                                            </footer>
                                        </div>
                                    </div>
                                </article>
                            </div>
                        </main>
                    </div>
                </div>
            </div>
            <div className="flex flex-col">
                <Footer />
            </div>
        </>
    );
}

export async function getServerSideProps(context:any) {

    const currentURL = context.req.url;
    const slug = currentURL.slice( currentURL.lastIndexOf("/") + 1, ( currentURL.indexOf("?") !== -1 ? currentURL.indexOf("?") : currentURL.length ) );
    const publicPost = await fetch( process.env.WEB_URL+"/api/public/posts/"+slug, { method: 'GET', headers: { 'Accept': 'application/json', 'Content-Type': 'application/json' } });
    const publicPostData = await publicPost.json();
    return {
        props: {
            "postData" : publicPostData.data
        }
    }
}